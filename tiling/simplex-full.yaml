styles:
    tiling-simplex:
        doc:
            author:
                name: Patricio Gonzalez Vivo
                twitter: patriciogv
            description: 'Repeats a coordinate space (`vec2 st`) in diferent simplex
                tiles. To learn more about simplex grids check [this chapter about
                noise from the Book of Shaders](https://thebookofshaders.com/11/)

                '
            licence: MIT
            tangram-version: 0.0.7
            version: 0.0.1
        shaders:
            blocks:
                global: "// \n// ================================\nvec2 simplex (vec2\
                    \ st) {\n    vec2 r = vec2(0.0);\n    r.x = 1.1547*st.x;\n   \
                    \ r.y = st.y+0.5*r.x;\n    return r;\n}\nvec2 unsimplex (vec2\
                    \ st) {\n    vec2 r;\n    r.y=st.y-0.5*st.x;\n    r.x=st.x/1.1547;\n\
                    \    return r;\n}\n\nvec3 simplexGrid (vec2 st) {\n    vec3 xyz\
                    \ = vec3(0.0);\n    \n    vec2 p = fract(simplex(st));\n    if\
                    \ (p.x > p.y) {\n        xyz.xy = 1.0-vec2(p.x,p.y-p.x);\n   \
                    \     xyz.z = p.y;\n    } else {\n        xyz.yz = 1.0-vec2(p.x-p.y,p.y);\n\
                    \        xyz.x = p.x;\n    }\n    \n    return fract(xyz);\n}\n\
                    \nvec3 simplexRotatedGrid (vec2 st) {\n    vec3 xyz = vec3(0.0);\n\
                    \    \n    vec2 p = fract(simplex(st));\n    if (p.x > p.y) {\n\
                    \        xyz.xy = 1.-vec2(p.x,p.y-p.x);\n        xyz.z = p.y;\n\
                    \    } else {\n        xyz.zx = 1.-vec2(p.x-p.y,p.y);\n      \
                    \  xyz.y = p.x;\n    }\n    \n    return fract(xyz);\n}"
