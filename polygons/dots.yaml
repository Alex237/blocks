import:
    - ../tiling/brick.yaml
    - ../tiling/tile.yaml
    - ../space/tile.yaml
    - ../shapes/circle.yaml

styles:
    polygons-dots:
        base: polygons
        mix: [space-tile, tiling-brick, tiling-tile, shapes-circle]
        doc:
            author: 
                name: Patricio Gonzalez Vivo
                twitter: patriciogv
            version: 0.0.1
            tangram-version: 0.0.7
            licence: MIT
            description: |  
                Apply dot patterns to a polygon. To learn more about patterns check [this chapter from the Book of Shaders](https://thebookofshaders.com/09/)
        ui:
            DOTS_SCALE:
                type: number
                label: Scale
                range: 
                    min: 1.
                    max: 1000.
                    step: 1.
            DOTS_SIZE:
                type: number
                label: Size
                range: 
                    min: 0.
                    max: 1.
                    step: 0.01
            DOTS_STROKE:
                type: number
                label: Stroke
                range: 
                    min: 0.
                    max: 1.
                    step: 0.01
            DOTS_TYPE: 
                type: dropdown
                label: 'Type'
                values: ['fill', 'stroke']
            DOTS_TILE_STYLE: 
                type: dropdown
                label: 'Tile type'
                values: ['tile', 'brick']
        shaders:
            defines:
                DOTS_COLOR: color.rgb*.5
                DOTS_SCALE: 10.
                DOTS_SIZE: 0.41
                DOTS_STROKE: 0.15
                DOTS_TYPE: fill
                DOTS_TILE_STYLE: brick
            blocks:
                global: |
                    float fill (in float x) {
                        return aastep(DOTS_SIZE, x);
                    }
                    float stroke (in float x) {
                        return aastep(DOTS_SIZE, x+DOTS_STROKE) - aastep(DOTS_SIZE, x);  
                    }
                color: |
                    color.rgb = mix(color.rgb, 
                                    DOTS_COLOR, 
                                    DOTS_TYPE( circleDF(vec2(0.5)-DOTS_TILE_STYLE(getTileCoords()*DOTS_SCALE,2.))*2.) );