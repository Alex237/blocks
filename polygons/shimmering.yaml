import:
    # Blocks
    - ../tiling/simplex.yaml
    - ../generative/noise.yaml
    - ../space/constant.yaml

styles:
    polygons-shimmering:
        base: polygons
        mix: [tiling-simplex, generative-noise, space-constant]
        animated: true
        shaders:
            defines:
                SHIMMERING_IN: 14.
                SHIMMERING_OUT: 20.
                SHIMMERING_MAX_ZOOM: 20.
                SHIMMERING_SCALE_IN: 10.0
                SHIMMERING_SCALE_OUT: 10.0
                SHIMMERING_BACKGROUND: vec3(0.000,0.00,0.94)
                SHIMMERING_SPEED: 0.1
            blocks:
                color: |
                    float z = clamp(smoothstep(SHIMMERING_IN/SHIMMERING_MAX_ZOOM, SHIMMERING_OUT/SHIMMERING_MAX_ZOOM, max(u_map_position.z/SHIMMERING_MAX_ZOOM,0.)*0.9), 0., 1.);
                    float scale = mix(SHIMMERING_SCALE_IN, SHIMMERING_SCALE_OUT, z);
                    /*
                    vec2 st = gl_FragCoord.xy/u_resolution.xy;
                    st = (st-.5)*scale+ .5;
                    if (u_resolution.y > u_resolution.x ) {
                        st.y *= u_resolution.y/u_resolution.x;
                    } else {
                        st.x *= u_resolution.x/u_resolution.y;
                    }
                    */
                    vec2 st = getConstantCoords()*scale;
                    
                    vec2 s = skew(st);
                    vec2 s_f = fract(s);
                    float n = snoise(vec3(floor(s+step(s_f.x,s_f.y)*5.),u_time*SHIMMERING_SPEED));
                    color.rgb = mix(color.rgb,
                                    mix(SHIMMERING_BACKGROUND,color.rgb,n),
                                    z);