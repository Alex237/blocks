# Patricio Gonzalez Vivo (@patriciogv) - 2016

import:
    - ../geometry/tilt.yaml

styles:
    terrarium-base:
        mix: [geometry-tilt]
        raster: custom
        shaders:
            defines:
                TERRARIUM_ZOFFSET: 0.
            blocks:
                global: |
                    #ifdef TANGRAM_VERTEX_SHADER
                    uniform sampler2D u_rasters[TANGRAM_NUM_RASTER_SOURCES];
                    uniform vec2 u_raster_sizes[TANGRAM_NUM_RASTER_SOURCES];
                    uniform vec3 u_raster_offsets[TANGRAM_NUM_RASTER_SOURCES];
                    #define adjustRasterUV(raster_index, uv) ((uv) * u_raster_offsets[raster_index].z + u_raster_offsets[raster_index].xy)
                    #define currentRasterUV(raster_index) (adjustRasterUV(raster_index, v_modelpos_base_zoom.xy))
                    #define currentRasterPixel(raster_index) (currentRasterUV(raster_index) * rasterPixelSize(raster_index))
                    #define sampleRaster(raster_index) (texture2D(u_rasters[raster_index], currentRasterUV(raster_index)))
                    #define sampleRasterAtPixel(raster_index, pixel) (texture2D(u_rasters[raster_index], adjustRasterUV(raster_index, (pixel) / rasterPixelSize(raster_index))))
                    #define rasterPixelSize(raster_index) (u_raster_sizes[raster_index])
                    #endif
                    float getHeight() {
                        vec3 color = sampleRaster(1).rgb;
                        if (color.rg != vec2(0.0)) {
                            return -32768.+color.g*65025.+color.b*255.;
                        } else {
                            return -1.0;
                        }
                    }
                    void extrudeTerrain (inout vec4 position) {
                        vec2 pos = position.xy;
                        float height = getHeight();
                        if (height != -1.0) {
                            position.z += height;
                        }
                    }
                position: |
                    position.z += TERRARIUM_ZOFFSET*u_meters_per_pixel;
                    extrudeTerrain(position);